<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (singleton()) {
    exit;
}



if (manager.batLefty) {
x = room_width-x; 
image_xscale = -image_xscale; 
}

xScaleExtra = 0; 
pushDown = false; 
initialX = x; 
initialY = y; 
shakeDown = false; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pushDown) {

y = smooth_approach(y, initialY+16,0.4); 

if (y &gt;= initialY+16) {
pushDown = false
} 

}
else {

y = smooth_approach(y, initialY,0.2); 

}

if (manager.batLefty) {
image_angle = -manager.swingArc;
}
else {
image_angle = manager.swingArc;
}

if (xScaleExtra &gt; 0) 
{
    if (manager.batLefty) 
    {
        image_xscale = -(1+xScaleExtra);
    }
    else 
    {
        image_xscale = 1+xScaleExtra;
    }  
     
    image_yscale = image_xscale;
    xScaleExtra= lerp(xScaleExtra, 0, 0.2*mvc.timeMulti);
}
 

if (shakeDown) {
x = lerp(x,random_range(initialX-4, initialX+4),0.4);
y = lerp(y, random_range(initialY-4,initialY+4),0.4);  
}
else {
x = lerp(x, initialX, 0.1); 
y = lerp(y, initialY, 0.1); 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (manager.heatCount &gt; 0) 
{
    draw_sprite_ext(sprite_index, image_index, x, y,image_xscale,image_yscale+(manager.heatCount/manager.swingChargeMax)*.75, image_angle, c_red, 1);
}
else if (manager.swingCharge &gt; 0) 
{
    draw_sprite_ext(sprite_index, image_index, x, y,image_xscale,image_yscale+(manager.swingCharge/manager.swingChargeMax)*.75, image_angle, c_red, 1);
}

draw_sprite_ext(sprite_index, image_index, x, y+25,image_xscale, image_yscale-.6 , image_angle, c_black, 0.75);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
