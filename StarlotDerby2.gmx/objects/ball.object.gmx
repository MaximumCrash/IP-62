<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variable and Path Initialization
trail_init();
currentPath = 0;
path_start(pitcher.pitch[currentPath], manager.ballSpeed, path_action_continue, 1);

timer = 0;
hue = 0;
tailLength = 25; 

trickCount = 0;
trick = trickPitch(3); //Takes in Max Number of Tricks (Curently 3)
trickRun = false;
trickPosition = random_range(0.25, 0.9);
hardTimer = irandom_range(10, 30); //Between 0.1 seconds and 0.5 seconds. 
foul = false;
maxY = 1000;
extraYscale = 0;
baseScale = 0.1;
lastY = 0;
currentY = 0;
image_xscale = 0;
image_yscale = 0;
alarm[2] = 1;

ballHit = false;
goodHit = false;
batAngle = 0;
hitPositionX = 0;
hitPositionY = 0;
hitDistance = 0; 
exitPositionX = 0;
exitPositionY = 0;
currentDistance = 0;
exitDistance = 1;
exitSpeed = 0; 
initialBatAngle = 105;
closedTail = true; 
tailColor = manager.cYellow;
drawTail = true; 
tailShiftHue = false; 
hueUp = true; 
sleepHackFall = 10;
birdHitCount = 0;
fever = false; 
rebound = true;
currentRebound = 0;
birdRadius = 55; 
inBirdRadius = false; 
exitSafetyA = 0; 
exitSafetyB = 0; 
exitSpeedSafety = 0; 
if (instance_number(ballExtra) &gt; 0) {
with (ballExtra) {
instance_destroy(); 
}
} 

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chance Curse Handler
//Runs Earthquake 16% Chance

if (manager.ballGhost) 
{
    tailLength = 15; 
}

runCurse(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add Strike, Destroy Trail
if (!ballHit) {
   pitcher.currentState = 0;
    addStrike();
}


//pitcher.alarm[0] = 5; //Tell the Pitcher to make a new Ball. 
trail_destroy();
manager.ballHit = false;
mvc.currentState = speedState.normal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit Ball Scripts Direction
//After Collision this Script is Run. 
//Depending on the Angle of the Bat the ball will fly to 
//predetermined points outside of the screen. 

if (batAngle &gt; 0 &amp;&amp; batAngle &lt; (initialBatAngle + (30 * 1))) 
{ //RIGHT FOUL
    drawTail = false; 
    foul = true; 
    exitBall(528, 272, foul, 0);
} else if (batAngle &gt;= (initialBatAngle + (30 * 1)) &amp;&amp; batAngle &lt; (initialBatAngle + (30 * 2))) 
{ //RIGHT FIELD
         foul = false; 
         path_end();
         exitBall(room_width, -112, foul, 1);
    
} else if (batAngle &gt;= (initialBatAngle + (30 * 2)) &amp;&amp; batAngle &lt; (initialBatAngle + (30 * 3))) 
{ //CENTER FIELD
         foul = false;
         path_end();
         exitBall(room_width / 2, -112, foul, 2);
    
} else if (batAngle &gt;= (initialBatAngle + (30 * 3)) &amp;&amp; batAngle &lt; (initialBatAngle + (30 * 4))) 
{ //LEFT FIELD
         foul = false; 
         path_end();
         exitBall(0, -112, foul, 3);
    
} else if (batAngle &gt;= (initialBatAngle + (30 * 4)) &amp;&amp; batAngle &lt; (initialBatAngle + (30 * 5))) 
{ //LEFT FOUL
    drawTail = false;
    foul = true;
    exitBall(-153, 272, foul, 4);
} else if (batAngle &gt;= (initialBatAngle + (30 * 5)) &amp;&amp; batAngle &lt;= 360) 
{ //LEFT FOUL
    drawTail = false;
    foul = true;
    exitBall(-153, 272, foul, 4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Fancy Spinning EXTRAs
ballEX0 = instance_create(x, y, ballExtra); 
ballEX1 = instance_create(x, y, ballExtra); 
ballEX2 = instance_create(x, y, ballExtra); 
ballEX3 = instance_create(x, y, ballExtra); 
ballEX4 = instance_create(x, y, ballExtra); 


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STOP ALL TRICKS and RESET
mvc.currentState = speedState.normal;

if (trick == 1) //HARD STOP
path_speed = lerp(path_speed,manager.ballSpeed * mvc.timeMulti,0.4);

/*
case 2: { //SPEED UP
path_speed = lerp(path_speed, manager.ballSpeed  * mvc.timeMulti, 0.4); 
break;
}

case 3: { //SLOW DOWN
path_speed = lerp(path_speed, manager.ballSpeed * mvc.timeMulti, 0.4); 
break;
}
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Alarm
instance_destroy(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (drawTail) 
{
    trail_calculate(tailLength);
}

//This is for FEVER Balls Only
/*if (hueUp) {
    hue += (5*mvc.timeMulti); 
    if (hue &gt;= 255) {
        hueUp = false;
    }
}
else {
hue-= (5*mvc.timeMulti); 
if (hue &lt;= 0) {
        hueUp = true;
    }
}*/

if (tailShiftHue) 
{
    tailColor = manager.cBlue; 
}


//Runs a Trick depending on a couple of Parameters. 
if (path_position &gt; trickPosition &amp;&amp; !trickRun) {
    if (manager.difficulty &gt;= 2 &amp;&amp; manager.difficulty &lt; 3.25) {
        //Run a Trick if Possible
        if (manager.ballTrickster) {
           if (random(5) &gt;= 4 &amp;&amp; currentPath == 1 &amp;&amp; trickCount &lt; 2) {
              trickRun = true; 
              runTrick(trick); 
           }
        }
        else {
           if (random(10) &gt;= 9 &amp;&amp; currentPath == 1 &amp;&amp; trickCount &lt; 2) {
              trickRun = true; 
              runTrick(trick); 
           }
        }
    }
}

//Handles the Size of the Ball depending on it's distance.
//Creates a fake (Ball coming towards the screen effect. 
if (currentY &lt; y &amp;&amp; currentY &lt; maxY &amp;&amp; !ballHit) {
    currentY = y;
    image_yscale = (currentY / maxY) + baseScale + extraYscale;

    if (manager.ballGhost) 
    {
        image_alpha =0.55 - (currentY / maxY);
    }
    
} else if (ballHit) {

    manager.ballExitExtra = lerp(manager.ballExitExtra, 10, 0.4); 
    image_alpha = 1; 
    //image_angle+= (manager.ballSpeed *5) *mvc.timeMulti; 
    currentDistance = point_distance(x, y, exitPositionX, exitPositionY);
    image_yscale = (currentDistance / exitDistance) + baseScale + extraYscale;
    
    if (instance_number(ballExtra) &gt; 0) {
    if (currentDistance/exitDistance &lt;= .55 &amp;&amp; !ballExtra.moveToBat &amp;&amp; ballHit) {        
       if (!foul)  
       {
            ballExtra.moveToBat = true; 
       }
    }
}
}
if (image_yscale &gt; 1) {
    image_yscale = 1;
}
image_xscale = image_yscale;

if (extraYscale &gt; 0) {
extraYscale-= (0.08); 
}

if (ballHit) {
image_angle -= (manager.ballSpeed*4) *mvc.timeMulti;

if (instance_number(bird) &gt; 0) {
inst = instance_nearest(x,y,bird); 
if (sqrt(power(inst.x-x,2)+power(inst.y-y,2)) &lt;= birdRadius) {
if (!inBirdRadius) {
inBirdRadius = true; 
//birdRadius -= 8;
}
mvc.currentState = speedState.slowmo;
}    
else 
{
inBirdRadius = false; 
mvc.currentState = speedState.normal;
mvc.overrideSleepHack = true; 
}
}
}
else {
image_angle += (manager.ballSpeed*3) *mvc.timeMulti;
}

if (!trickRun) {
path_speed = manager.ballSpeed * mvc.timeMulti;
}


if (mvc.currentState != speedState.stop) {
if (ballHit) {
speed = mvc.timeMulti * ((manager.equip[1] * (manager.swingCharge/manager.swingChargeMax + 0.25)) + (manager.ballSpeed * 1.25));

move_towards_point(exitSafetyA, exitSafetyB, exitSpeedSafety * mvc.timeMulti); 
}
}
else {
speed = 0; 
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bat">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision Response
//We have collided with the Bat. 
//Stop everything and EXIT the Ball. 
if (!ballHit) {
ballHit = true;
path_end();
path_speed = 0; 
hitPositionX = x; 
hitPositionY = y; 
screenFX.hitRipplePointX = hitPositionX;
screenFX.hitRipplePointY = hitPositionY; 
screenFX.hitRipple = true; 
screenFX.hitRippleOpacity = 0.5;
pitcher.currentState = 0;
batAngle = manager.swingArc;
exitSpeed = (manager.ballSpeed*.35) + (manager.equip[1] * (manager.swingCharge / manager.swingChargeMax + 0.25)) + (manager.ballSpeed * 1.25);
//exitDistance = point_distance(hitPositionX, hitPositionY, exitPositionX, exitPositionY);
//extraYscale = 0.1; 
bat.pushDown = true; 
alarm[3] = 1;
bat.xScaleExtra += 0.2;
extraYscale += 0.05; 
//mvc.currentState = speedState.normal;
//mvc.overrideChannel = 0; 
currentRebound++;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bird">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ballHit &amp;&amp; other.state!=2) {
//*****Make other(aka Bird) sprite into Dead hit sprite and then switch state. 
    screenFX.birdRipplePointX = other.x;
    screenFX.birdRipplePointY = other.y; 
    if (manager.birdHappyBirthday)
    { 
      part_particles_create(global.particles, screenFX.birdRipplePointX, screenFX.birdRipplePointY, global.partTypeStarfetti, 32 * (birdHitCount+1));
       part_particles_create(global.particles, screenFX.birdRipplePointX, screenFX.birdRipplePointY - 32, global.partTypeMoreStarfetti, 32 * (birdHitCount+1));
 }
    else 
    {
       part_particles_create(global.particles, screenFX.birdRipplePointX, screenFX.birdRipplePointY, global.partTypeFeather, 10 * (birdHitCount+1));
      // part_particles_create(global.particles, screenFX.birdRipplePointX, screenFX.birdRipplePointY - 32, global.partTypeFeather, 32 * (birdHitCount+1));

    }
    screenFX.birdRipple = true; 
    screenFX.birdRippleOpacity = 0.5;
    sleep_hack(sleepHackFall+power(birdHitCount*3,2));
    other.state = 2; //Sets Bird State to Dead. 
    ball.extraYscale += 0.5; 
    manager.shake1 += 8;
    switch (other.type) {
    case 0: { //If Normal
        givePoint(1 * (1 + manager.multiplier), false); 
        break;
    }
    case 1: { //If Golden
        givePoint(2 * (1 + manager.multiplier), false); 
        break;
    }
    }
    birdHitCount++; 
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If We're at the end of a Weird Path Destroy the Ball. 
if (pitcher.pitch[0,currentPath] == asset_get_index("endWarp") || pitcher.pitch[0,currentPath] == asset_get_index("endWarpR")) {
instance_destroy(); 
}

//Start our New Path! 
if (currentPath &lt; 2 &amp;&amp; !manager.ballHit) {
currentPath++;
path_start(pitcher.pitch[currentPath], manager.ballSpeed, path_action_continue,true);
trickRun = false; 
if (currentPath == 2) {
trickPosition = random_range(0.1,0.5); 
}
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Runs a destroy timer. 
alarm[0] = 20;

 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_alpha(0.75);
draw_circle(x, y +25,sprite_width/2,false);
draw_set_color(c_white);
draw_set_alpha(1);

if (!manager.ballGhost) 
{
    if (drawTail) 
    {
       draw_trail_ext((sprite_width+3),tailColor,-1,closedTail,0.65);
    }
    
    draw_circle_colour(x,y,sprite_width*.59 + extraYscale,manager.cYellow,manager.cYellow,false);
}
else 
{
    draw_trail_ext((sprite_width+3),tailColor,-1,closedTail,image_alpha);
}
draw_self();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
