<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ex</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (singleton()) {
    exit;
}

//Initalize Pitcher
pitch = queuePitch();
nextPitch = queuePitch();
pitchAnimationFrame = 0; 
pitchAnimationMax = 120; 
releaseSpeed = 1; 
image_index = pitchAnimationFrame; 
image_speed = 0; 
currentState = 0; //0 - Ready, 1 - Wind Up, 2 - Wait, 3 - Pitch, 4 - StandBy
windWaitTime =5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bird Spawner
if (manager.birdCount &lt; manager.maxBirdCount) {
instance_create(choose(-32,room_width+32), irandom_range(32,120),bird); 
manager.birdCount++; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize State if Pitcher is Ready
if (manager.pitcherUltraMan) {
currentState = 1; 
pitchAnimationFrame = 0;
pitchAnimationMax = irandom_range(60,10); 
releaseSpeed = choose(1,0.5,0.25); 
windWaitTime = 1; 
}
else {
currentState = 1; 
pitchAnimationFrame = 0;
pitchAnimationMax = 120;
windWaitTime = 5; 
}

if (random(manager.futureChance) &gt;= manager.futureChance-1) 
{
//If we pass the futureChance test we will show the next path.


}

futureProbe.alarm[1] = 1; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = pitchAnimationFrame;

switch (currentState) 
{
    case 0: { //Ready
       // ds_list_add(manager.list, "...Pitcher READY");
        alarm[0] = 1;
        loadPitch();
        futureProbe.alarm[1] = 1;
        break;
    }
    
    case 1: { //Wind Up
  //  ds_list_add(manager.list, "...Pitcher WIND UP");
        if (pitchAnimationFrame &lt; pitchAnimationMax) 
        {
            pitchAnimationFrame+= 1 * mvc.timeMulti;
        }
        else 
        {
            currentState = 2; 
        }
        break;
    }
    
    case 2: { //Wait/Extra
  //  ds_list_add(manager.list, "...Pitcher WAIT/EXTRA");
        if (windWaitTime &gt; 0) 
        {
            windWaitTime-= 1*mvc.timeMulti;
        }
        else 
        {
            currentState = 3; 
        }
        break;
    }
    
    case 3: { //Pitch
     //   ds_list_add(manager.list, "...Pitcher PITCH");
        if (pitchAnimationFrame &lt; 60) 
        {
            pitchAnimationFrame += releaseSpeed*mvc.timeMulti;
        }
        else {
            

            instance_create(x,y,ball);
            currentState = 4;
            //Load Bird
            if (random(5) &gt;= 3) 
            {
                alarm[1] = irandom_range(30,120);
            } 
        }
            break;
    }
    
    default: { //Standby
       // ds_list_add(manager.list, "...Pitcher STAND BY");
            if (instance_number(ball) &lt;= 0 ) 
            {
                currentState = 0;
            }
        break;
    }
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
